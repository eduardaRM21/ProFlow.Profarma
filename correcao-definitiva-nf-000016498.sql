-- CORRE√á√ÉO DEFINITIVA PARA NF 000016498
-- Execute este script AP√ìS executar o diagn√≥stico completo

-- ========================================
-- 1. VERIFICA√á√ÉO PR√â-CORRE√á√ÉO
-- ========================================
DO $$
BEGIN
    RAISE NOTICE 'üîç INICIANDO CORRE√á√ÉO PARA NF 000016498';
    RAISE NOTICE '‚è∞ Timestamp: %', NOW();
END $$;

-- ========================================
-- 2. VERIFICAR SE A NF J√Å EXISTE
-- ========================================
DO $$
DECLARE
    nf_exists BOOLEAN;
    nf_count INTEGER;
BEGIN
    -- Verificar se a NF j√° existe
    SELECT COUNT(*) INTO nf_count
    FROM notas_fiscais 
    WHERE numero_nf = '000016498';
    
    nf_exists := (nf_count > 0);
    
    IF nf_exists THEN
        RAISE NOTICE '‚ÑπÔ∏è NF 000016498 j√° existe na tabela notas_fiscais (% registros)', nf_count;
    ELSE
        RAISE NOTICE '‚ùå NF 000016498 N√ÉO encontrada. Iniciando corre√ß√£o...';
    END IF;
END $$;

-- ========================================
-- 3. INSERIR NF 000016498 SE N√ÉO EXISTIR
-- ========================================
DO $$
DECLARE
    nf_exists BOOLEAN;
    new_nf_id UUID;
    insert_success BOOLEAN;
BEGIN
    -- Verificar se a NF j√° existe
    SELECT EXISTS(
        SELECT 1 FROM notas_fiscais WHERE numero_nf = '000016498'
    ) INTO nf_exists;
    
    IF NOT nf_exists THEN
        RAISE NOTICE 'üîß Criando registro para NF 000016498...';
        
        BEGIN
            -- Gerar novo ID
            new_nf_id := gen_random_uuid();
            
            -- Inserir NF na tabela notas_fiscais
            INSERT INTO notas_fiscais (
                id,
                numero_nf,
                codigo_completo,
                volumes,
                destino,
                fornecedor,
                cliente_destino,
                tipo_carga,
                status,
                data,
                created_at,
                updated_at
            ) VALUES (
                new_nf_id,
                '000016498',
                '000016498|000016498|0|DESTINO|FORNECEDOR|CLIENTE|TIPO',
                0,
                'DESTINO TEMPOR√ÅRIO',
                'FORNECEDOR TEMPOR√ÅRIO',
                'CLIENTE TEMPOR√ÅRIO',
                'TIPO TEMPOR√ÅRIO',
                'pendente',
                CURRENT_DATE,
                NOW(),
                NOW()
            );
            
            insert_success := TRUE;
            RAISE NOTICE '‚úÖ NF 000016498 criada com sucesso!';
            RAISE NOTICE 'üÜî ID gerado: %', new_nf_id;
            
        EXCEPTION WHEN OTHERS THEN
            insert_success := FALSE;
            RAISE NOTICE '‚ùå Erro ao criar NF 000016498: %', SQLERRM;
            RAISE NOTICE 'üîç Detalhes do erro: %', SQLSTATE;
        END;
        
    ELSE
        RAISE NOTICE '‚ÑπÔ∏è NF 000016498 j√° existe, pulando inser√ß√£o';
        insert_success := TRUE;
    END IF;
    
    -- Verificar resultado final
    IF insert_success THEN
        RAISE NOTICE '‚úÖ Corre√ß√£o conclu√≠da com sucesso!';
    ELSE
        RAISE NOTICE '‚ùå Corre√ß√£o falhou. Verifique os logs acima.';
    END IF;
END $$;

-- ========================================
-- 4. VERIFICA√á√ÉO P√ìS-CORRE√á√ÉO
-- ========================================
SELECT 
    'üìã VERIFICA√á√ÉO P√ìS-CORRE√á√ÉO' as secao,
    'NF 000016498' as numero_buscado,
    COUNT(*) as total_encontradas,
    CASE 
        WHEN COUNT(*) > 0 THEN '‚úÖ NF ENCONTRADA - CORRE√á√ÉO FUNCIONOU'
        ELSE '‚ùå NF AINDA N√ÉO ENCONTRADA - PROBLEMA PERSISTE'
    END as status
FROM notas_fiscais 
WHERE numero_nf = '000016498';

-- ========================================
-- 5. VERIFICAR DETALHES DA NF INSERIDA
-- ========================================
SELECT 
    'üîç DETALHES DA NF INSERIDA' as secao,
    id,
    numero_nf,
    codigo_completo,
    volumes,
    destino,
    fornecedor,
    cliente_destino,
    tipo_carga,
    status,
    data,
    created_at,
    updated_at
FROM notas_fiscais 
WHERE numero_nf = '000016498';

-- ========================================
-- 6. VERIFICAR SE A NF EST√Å SENDO ENCONTRADA
-- ========================================
SELECT 
    'üß™ TESTE DE BUSCA DO SISTEMA' as secao,
    'Simulando busca do EmbalagemService' as info,
    COUNT(*) as total_encontradas,
    CASE 
        WHEN COUNT(*) > 0 THEN '‚úÖ Busca funcionando - NF dispon√≠vel para valida√ß√£o'
        ELSE '‚ùå Busca n√£o funcionando - Problema persiste'
    END as status_busca
FROM notas_fiscais 
WHERE numero_nf = '000016498';

-- ========================================
-- 7. VERIFICAR RELACIONAMENTOS
-- ========================================
SELECT 
    'üîó VERIFICA√á√ÉO DE RELACIONAMENTOS' as secao,
    'NF em relat√≥rios ap√≥s corre√ß√£o' as info,
    COUNT(*) as total_relatorios
FROM relatorios r
INNER JOIN relatorio_notas rn ON r.id = rn.relatorio_id
INNER JOIN notas_fiscais nf ON rn.nota_fiscal_id = nf.id
WHERE nf.numero_nf = '000016498';

-- ========================================
-- 8. VERIFICAR SE H√Å PROBLEMAS DE PERMISS√ÉO
-- ========================================
SELECT 
    'üîê VERIFICA√á√ÉO DE PERMISS√ïES' as secao,
    'Permiss√µes na tabela notas_fiscais' as info,
    privilege_type,
    grantee
FROM information_schema.role_table_grants 
WHERE table_name = 'notas_fiscais';

-- ========================================
-- 9. VERIFICAR SE H√Å PROBLEMAS DE RLS
-- ========================================
SELECT 
    'üõ°Ô∏è VERIFICA√á√ÉO DE RLS' as secao,
    'Pol√≠ticas RLS ativas' as info,
    policyname,
    permissive,
    roles,
    cmd
FROM pg_policies 
WHERE tablename = 'notas_fiscais';

-- ========================================
-- 10. VERIFICAR SE H√Å PROBLEMAS DE TRIGGERS
-- ========================================
SELECT 
    '‚ö° VERIFICA√á√ÉO DE TRIGGERS' as secao,
    'Triggers ativos' as info,
    trigger_name,
    event_manipulation,
    action_timing
FROM information_schema.triggers 
WHERE event_object_table = 'notas_fiscais';

-- ========================================
-- 11. TESTE DE INSER√á√ÉO ADICIONAL
-- ========================================
DO $$
DECLARE
    test_insert_success BOOLEAN;
    test_nf_id UUID;
BEGIN
    RAISE NOTICE 'üß™ Testando inser√ß√£o de NF de teste...';
    
    BEGIN
        -- Tentar inserir uma NF de teste
        test_nf_id := gen_random_uuid();
        
        INSERT INTO notas_fiscais (
            id,
            numero_nf,
            codigo_completo,
            volumes,
            destino,
            fornecedor,
            cliente_destino,
            tipo_carga,
            status,
            data,
            created_at,
            updated_at
        ) VALUES (
            test_nf_id,
            'TESTE_' || EXTRACT(EPOCH FROM NOW())::TEXT,
            'TESTE|TESTE|0|TESTE|TESTE|TESTE|TESTE',
            0,
            'TESTE',
            'TESTE',
            'TESTE',
            'TESTE',
            'teste',
            CURRENT_DATE,
            NOW(),
            NOW()
        );
        
        test_insert_success := TRUE;
        RAISE NOTICE '‚úÖ Teste de inser√ß√£o funcionou!';
        
        -- Limpar NF de teste
        DELETE FROM notas_fiscais WHERE id = test_nf_id;
        RAISE NOTICE 'üßπ NF de teste removida';
        
    EXCEPTION WHEN OTHERS THEN
        test_insert_success := FALSE;
        RAISE NOTICE '‚ùå Teste de inser√ß√£o falhou: %', SQLERRM;
    END;
    
    IF test_insert_success THEN
        RAISE NOTICE '‚úÖ Tabela notas_fiscais est√° funcionando corretamente';
    ELSE
        RAISE NOTICE '‚ùå Tabela notas_fiscais tem problemas de inser√ß√£o';
    END IF;
END $$;

-- ========================================
-- 12. RESUMO FINAL DA CORRE√á√ÉO
-- ========================================
SELECT 
    'üìä RESUMO FINAL DA CORRE√á√ÉO' as secao,
    'Status da NF 000016498' as info,
    CASE 
        WHEN (SELECT COUNT(*) FROM notas_fiscais WHERE numero_nf = '000016498') > 0 
        THEN '‚úÖ NF DISPON√çVEL PARA VALIDA√á√ÉO'
        ELSE '‚ùå NF AINDA N√ÉO DISPON√çVEL'
    END as status_final,
    (SELECT COUNT(*) FROM notas_fiscais WHERE numero_nf = '000016498') as nf_encontradas,
    (SELECT COUNT(*) FROM notas_fiscais) as total_nfs_tabela,
    CASE 
        WHEN (SELECT COUNT(*) FROM notas_fiscais WHERE numero_nf = '000016498') > 0 
        THEN 'üéØ CORRE√á√ÉO APLICADA COM SUCESSO'
        ELSE '‚ö†Ô∏è CORRE√á√ÉO N√ÉO FUNCIONOU - VERIFICAR LOGS'
    END as resultado_correcao;

-- ========================================
-- 13. INSTRU√á√ïES P√ìS-CORRE√á√ÉO
-- ========================================
DO $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üéØ INSTRU√á√ïES P√ìS-CORRE√á√ÉO:';
    RAISE NOTICE '1. Recarregue a p√°gina de embalagem';
    RAISE NOTICE '2. Teste a bipagem com a NF 000016498';
    RAISE NOTICE '3. Verifique se a NF √© aceita pelo sistema';
    RAISE NOTICE '4. Monitore os logs no console do navegador';
    RAISE NOTICE '';
    RAISE NOTICE 'üìû Se o problema persistir:';
    RAISE NOTICE '- Verifique os logs do console';
    RAISE NOTICE '- Execute o diagn√≥stico novamente';
    RAISE NOTICE '- Compartilhe os resultados das consultas';
    RAISE NOTICE '';
    RAISE NOTICE '‚úÖ CORRE√á√ÉO CONCLU√çDA!';
END $$;
